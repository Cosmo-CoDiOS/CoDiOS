name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: CoDirs build for the Cosmo Communicator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup cross-compiliation toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-11-08
          target: thumbv7em-none-eabihf
          override: true

      - name: Build CoDirs in release mode, if its a release
        uses: actions-rs/cargo@v1
        env:
          DEP_LV_CONFIG_PATH: /project/
        if: startsWith(github.ref, 'refs/tags/')
        with:
          use-cross: true
          command: build
          args: --target=thumbv7em-none-eabihf --locked --all --release

      - name: Build CoDirs in debug mode
        uses: actions-rs/cargo@v1
        env:
          DEP_LV_CONFIG_PATH: /project/
        with:
          use-cross: true
          command: build
          args: --target=thumbv7em-none-eabihf --locked --all

      - name: 'Install (Cargo) binutils, if its release.'
        if: startsWith(github.ref, 'refs/tags/')
        run:
          cargo install cargo-binutils && rustup component add
          llvm-tools-preview

      - name: Strip the CoDiR image, if its a release
        if: startsWith(github.ref, 'refs/tags/')
        run: cargo-strip --release -- --strip-all

      - name: Create release for CoDiR
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/thumbv7em-none-eabihf/release/codirs-firmware
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Upload debug build artifact
        uses: actions/upload-artifact@v2
        with:
          name: codirs-firmware-debug
          path: ./target/thumbv7em-none-eabihf/debug/codirs-firmware

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
